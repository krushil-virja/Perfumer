package com.entities;

// Generated 19 Oct, 2023 4:05:56 PM by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "user", catalog = "perfumer")
public class User implements java.io.Serializable {

	private Integer id;
	private String name;
	private String email;
	private String password;
	private Long number;
	private String address;
	private String state;
	private String country;
	private Integer pincode;
	private Set<Checkout> checkouts = new HashSet<Checkout>(0);
	private Set<Order> orders = new HashSet<Order>(0);
	private Set<Usercoupon> usercoupons = new HashSet<Usercoupon>(0);
	private Set<Cart> carts = new HashSet<Cart>(0);
	private Set<Rating> ratings = new HashSet<Rating>(0);
	private Set<Wishlist> wishlists = new HashSet<Wishlist>(0);

	public User() {
	}

	public User(String name, String email, String password, Long number, String address, String state, String country,
			Integer pincode, Set<Checkout> checkouts, Set<Order> orders, Set<Usercoupon> usercoupons, Set<Cart> carts,
			Set<Rating> ratings, Set<Wishlist> wishlists) {
		this.name = name;
		this.email = email;
		this.password = password;
		this.number = number;
		this.address = address;
		this.state = state;
		this.country = country;
		this.pincode = pincode;
		this.checkouts = checkouts;
		this.orders = orders;
		this.usercoupons = usercoupons;
		this.carts = carts;
		this.ratings = ratings;
		this.wishlists = wishlists;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "name", length = 100)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "email", length = 100)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "password", length = 100)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "number")
	public Long getNumber() {
		return this.number;
	}

	public void setNumber(Long number) {
		this.number = number;
	}

	@Column(name = "address", length = 100)
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@Column(name = "state", length = 100)
	public String getState() {
		return this.state;
	}

	public void setState(String state) {
		this.state = state;
	}

	@Column(name = "country", length = 100)
	public String getCountry() {
		return this.country;
	}

	public void setCountry(String country) {
		this.country = country;
	}

	@Column(name = "pincode")
	public Integer getPincode() {
		return this.pincode;
	}

	public void setPincode(Integer pincode) {
		this.pincode = pincode;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<Checkout> getCheckouts() {
		return this.checkouts;
	}

	public void setCheckouts(Set<Checkout> checkouts) {
		this.checkouts = checkouts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<Order> getOrders() {
		return this.orders;
	}

	public void setOrders(Set<Order> orders) {
		this.orders = orders;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<Usercoupon> getUsercoupons() {
		return this.usercoupons;
	}

	public void setUsercoupons(Set<Usercoupon> usercoupons) {
		this.usercoupons = usercoupons;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<Cart> getCarts() {
		return this.carts;
	}

	public void setCarts(Set<Cart> carts) {
		this.carts = carts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<Rating> getRatings() {
		return this.ratings;
	}

	public void setRatings(Set<Rating> ratings) {
		this.ratings = ratings;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<Wishlist> getWishlists() {
		return this.wishlists;
	}

	public void setWishlists(Set<Wishlist> wishlists) {
		this.wishlists = wishlists;
	}

}
